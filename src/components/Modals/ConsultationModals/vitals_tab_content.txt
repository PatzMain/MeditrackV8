{activeTab === 'vitals' && (
            <div className="tab-content">
              <div className="section-header">
                <h3>Vital Signs Records</h3>
                <button
                  className="btn-primary"
                  onClick={() => {
                    setEditingVitalSigns(null);
                    setVitalSignsModalOpen(true);
                  }}
                  disabled={consultation.status === 'completed'}
                >
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                    <line x1="12" y1="5" x2="12" y2="19"/>
                    <line x1="5" y1="12" x2="19" y2="12"/>
                  </svg>
                  Add Vital Signs
                </button>
              </div>
              <div className="vitals-list">
                {loading ? (
                  <div className="loading-state">
                    <div className="spinner"></div>
                    <p>Loading vital signs...</p>
                  </div>
                ) : vitalSigns.length === 0 ? (
                  <div className="empty-state">
                    <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
                      <path d="M22 12h-4l-3 9L9 3l-3 9H2"/>
                    </svg>
                    <h3>No Vital Signs Recorded</h3>
                    <p>Record vital signs during this consultation to track patient's condition.</p>
                    <button
                      className="btn-primary"
                      onClick={() => {
                        setEditingVitalSigns(null);
                        setVitalSignsModalOpen(true);
                      }}
                      disabled={consultation.status === 'completed'}
                    >
                      Add First Vital Signs
                    </button>
                  </div>
                ) : (
                  vitalSigns.map((vital, index) => (
                    <div key={vital.id} className="vital-signs-card">
                      <div className="vital-header">
                        <div className="vital-header-left">
                          <h4>Vital Signs #{vitalSigns.length - index}</h4>
                          <span className="vital-time">
                            {new Date(vital.recorded_at).toLocaleString('en-US', {
                              month: 'short',
                              day: 'numeric',
                              year: 'numeric',
                              hour: '2-digit',
                              minute: '2-digit'
                            })}
                          </span>
                        </div>
                        <div className="vital-header-actions">
                          <button
                            className="btn-icon-small btn-edit"
                            onClick={() => handleEditVitalSigns(vital)}
                            disabled={consultation.status === 'completed'}
                            title="Edit vital signs"
                          >
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                              <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/>
                              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"/>
                            </svg>
                          </button>
                          <button
                            className="btn-icon-small btn-delete"
                            onClick={() => handleDeleteVitalSigns(vital.id)}
                            disabled={consultation.status === 'completed'}
                            title="Delete vital signs"
                          >
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                              <polyline points="3 6 5 6 21 6"/>
                              <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/>
                            </svg>
                          </button>
                        </div>
                      </div>
                      <div className="vital-details">
                        <div className="vital-row">
                          <div className="vital-item">
                            <span className="vital-label">Blood Pressure</span>
                            <span className="vital-value">
                              {vital.blood_pressure_systolic}/{vital.blood_pressure_diastolic} <span className="vital-unit">mmHg</span>
                            </span>
                          </div>
                          <div className="vital-item">
                            <span className="vital-label">Heart Rate</span>
                            <span className="vital-value">{vital.pulse_rate} <span className="vital-unit">bpm</span></span>
                          </div>
                          <div className="vital-item">
                            <span className="vital-label">Temperature</span>
                            <span className="vital-value">{vital.temperature} <span className="vital-unit">Â°C</span></span>
                          </div>
                        </div>
                        <div className="vital-row">
                          <div className="vital-item">
                            <span className="vital-label">Respiratory Rate</span>
                            <span className="vital-value">{vital.respiratory_rate} <span className="vital-unit">/min</span></span>
                          </div>
                          {vital.oxygen_saturation && (
                            <div className="vital-item">
                              <span className="vital-label">O2 Saturation</span>
                              <span className="vital-value">{vital.oxygen_saturation} <span className="vital-unit">%</span></span>
                            </div>
                          )}
                          {vital.pain_scale !== null && vital.pain_scale !== undefined && (
                            <div className="vital-item">
                              <span className="vital-label">Pain Level</span>
                              <span className={`pain-badge pain-${vital.pain_scale <= 3 ? 'low' : vital.pain_scale <= 6 ? 'moderate' : vital.pain_scale <= 8 ? 'severe' : 'critical'}`}>
                                {vital.pain_scale}/10
                              </span>
                            </div>
                          )}
                        </div>
                        {(vital.height || vital.weight) && (
                          <div className="vital-row">
                            {vital.height && (
                              <div className="vital-item">
                                <span className="vital-label">Height</span>
                                <span className="vital-value">{vital.height} <span className="vital-unit">cm</span></span>
                              </div>
                            )}
                            {vital.weight && (
                              <div className="vital-item">
                                <span className="vital-label">Weight</span>
                                <span className="vital-value">{vital.weight} <span className="vital-unit">kg</span></span>
                              </div>
                            )}
                            {vital.height && vital.weight && (
                              <div className="vital-item">
                                <span className="vital-label">BMI</span>
                                <span className="vital-value">
                                  {((vital.weight / Math.pow(vital.height / 100, 2))).toFixed(1)}
                                </span>
                              </div>
                            )}
                          </div>
                        )}
                      </div>
                    </div>
                  ))
                )}
              </div>
            </div>
          )}
